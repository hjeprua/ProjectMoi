package com.nrolove.models.npc;

import static com.nrolove.services.func.SummonDragon.*;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import com.nrolove.consts.ConstMap;
import com.nrolove.consts.ConstNpc;
import com.nrolove.consts.ConstPlayer;
import com.nrolove.consts.ConstTask;
import com.nrolove.jdbc.daos.PlayerDAO;
import com.nrolove.models.boss.Boss;
import com.nrolove.models.boss.BossFactory;
import com.nrolove.models.boss.BossManager;
import com.nrolove.models.item.Item;
import com.nrolove.models.map.Map;
import com.nrolove.models.map.MaBu12h.MapMaBu;
import com.nrolove.models.map.blackball.BlackBallWar;
import com.nrolove.models.map.phoban.BanDoKhoBau;
import com.nrolove.models.map.phoban.DoanhTrai;
import com.nrolove.models.player.Inventory;
import com.nrolove.models.player.NPoint;
import com.nrolove.models.player.Player;
import com.nrolove.server.Maintenance;
import com.nrolove.services.BanDoKhoBauService;
import com.nrolove.services.ClanService;
import com.nrolove.services.DoanhTraiService;
import com.nrolove.services.FriendAndEnemyService;
import com.nrolove.services.IntrinsicService;
import com.nrolove.services.InventoryService;
import com.nrolove.services.ItemService;
import com.nrolove.services.MapService;
import com.nrolove.services.NpcService;
import com.nrolove.services.OpenPowerService;
import com.nrolove.services.PetService;
import com.nrolove.services.PlayerService;
import com.nrolove.services.Service;
import com.nrolove.services.TaskService;
import com.nrolove.services.func.ChangeMapService;
import com.nrolove.services.func.CombineServiceNew;
import com.nrolove.services.func.Input;
import com.nrolove.services.func.LuckyRound;
import com.nrolove.services.func.PVPServcice;
import com.nrolove.services.func.ShopService;
import com.nrolove.services.func.SummonDragon;
import com.nrolove.services.func.TopService;
import com.nrolove.utils.Logger;
import com.nrolove.utils.TimeUtil;
import com.nrolove.utils.Util;

/**
 *
 * @author üíñ Tr·∫ßn L·∫°i üíñ
 * @copyright üíñ GirlkuN üíñ
 *
 */
public class NpcFactory {

    private static boolean nhanVang = true;
    private static boolean nhanDeTu = true;

    //playerid - object
    public static final java.util.Map<Long, Object> PLAYERID_OBJECT = new HashMap<Long, Object>();

    private NpcFactory() {

    }

    public static Npc createNPC(int mapId, int status, int cx, int cy, int tempId, int avartar) {
        Npc npc = null;
        try {
            switch (tempId) {
                case ConstNpc.QUY_LAO_KAME:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ch√†o con, con mu·ªën ta gi√∫p g√¨ n√†o?",
                                            "B·∫£n ƒë·ªì\nkho b√°u", "Ch∆∞a C√≥\nS·ª± Ki·ªán", "Shop\nH·ªìng Ng·ªçc",
                                            "Gi·∫£i t√°n\nbang h·ªôi", "L√£nh ƒê·ªãa\nbang h·ªôi", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            if (player.clan != null) {
                                                if (player.clan.banDoKhoBau != null) {
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPENED_DBKB,
                                                            "Bang h·ªôi c·ªßa con ƒëang ƒëi t√¨m kho b√°u d∆∞·ªõi bi·ªÉn c·∫•p ƒë·ªô "
                                                            + player.clan.banDoKhoBau.level
                                                            + "\nCon c√≥ mu·ªën ƒëi theo kh√¥ng?",
                                                            "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                } else {

                                                    this.createOtherMenu(player, ConstNpc.MENU_OPEN_DBKB,
                                                            "ƒê√¢y l√† b·∫£n ƒë·ªì kho b√°u h·∫£i t·∫∑c t√≠ hon\nC√°c con c·ª© y√™n t√¢m l√™n ƒë∆∞·ªùng\n"
                                                            + "·ªû ƒë√¢y c√≥ ta lo\nNh·ªõ ch·ªçn c·∫•p ƒë·ªô v·ª´a s·ª©c m√¨nh nh√©",
                                                            "Ch·ªçn\nc·∫•p ƒë·ªô", "T·ª´ ch·ªëi");
                                                }
                                            } else {
                                                this.npcChat(player, "Con ph·∫£i c√≥ bang h·ªôi ta m·ªõi c√≥ th·ªÉ cho con ƒëi");
                                            }
                                            break;
                                        case 1:
                                            this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                    "S·ª± ki·ªán Halloween ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng Lord\n"
                                                    + "Chu·∫©n b·ªã x10 nguy√™n li·ªáu K·∫πo, B√°nh Quy, B√≠ ng√¥ ƒë·ªÉ ƒë·ªïi Gi·ªè K·∫πo cho ta nh√©\n"
                                                    + "Nguy√™n Li·ªáu thu th·∫≠p b·∫±ng c√°ch ƒë√°nh qu√°i t·∫°i c√°c h√†nh tinh ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh\n"
                                                    + "T√≠ch l≈©y 3 Gi·ªè K·∫πo +  3 V√© mang qua ƒë√¢y ta s·∫Ω cho con 1 H·ªôp Ma Qu·ª∑\n"
                                                    + "T√≠ch l≈©y 3 Gi·ªè K·∫πo, 3 H·ªôp Ma Qu·ª∑ + 3 V√© \nmang qua ƒë√¢y ta s·∫Ω cho con 1 h·ªôp qu√† th√∫ v·ªã.",
                                                    "ƒê·ªïi\nGi·ªè K·∫πo", "ƒê·ªïi H·ªôp\nMa Qu·ª∑", "ƒê·ªïi H·ªôp\nQu√† Halloween",
                                                    "T·ª´ ch·ªëi");

                                            break;
                                        case 2:
                                            ShopService.gI().openShopHongNgoc(player, ConstNpc.SHOP_HONG_NGOC, 0);
                                            break;
                                        case 3:
                                            if (player.clan != null) {
                                                ClanService.gI().RemoveClanAll(player);
                                            } else {
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n kh√¥ng c√≥ bang h·ªôi n√†o ƒë·ªÉ gi·∫£i t√°n.");
                                            }
                                            break;
                                        case 4:
                                            if (player.clan != null) {
                                                Service.getInstance().sendThongBao(player,
                                                        "C·∫ßn ƒê·∫°t 80 t·ª∑.");
                                            }
                                            if (player.getSession().player.nPoint.power >= 80000000000L) {

                                                ChangeMapService.gI().changeMapBySpaceShip(player, 156, -1, 432);
                                                break; // qua lanh dia
                                            }
                                    }

                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_SUKIEN) {
                                    switch (select) {
                                        case 0:
                                            if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                                                Item keo = InventoryService.gI().finditemnguyenlieuKeo(player);
                                                Item banh = InventoryService.gI().finditemnguyenlieuBanh(player);
                                                Item bingo = InventoryService.gI().finditemnguyenlieuBingo(player);

                                                if (keo != null && banh != null && bingo != null) {
                                                    Item GioBingo = ItemService.gI().createNewItem((short) 2016, 1);

                                                    // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                                                    InventoryService.gI().subQuantityItemsBag(player, keo, 10);
                                                    InventoryService.gI().subQuantityItemsBag(player, banh, 10);
                                                    InventoryService.gI().subQuantityItemsBag(player, bingo, 10);

                                                    GioBingo.itemOptions.add(new Item.ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, GioBingo, false);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "ƒê·ªïi qu√† s·ª± ki·ªán th√†nh c√¥ng");
                                                } else {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Vui l√≤ng chu·∫©n b·ªã x10 Nguy√™n Li·ªáu K·∫πo, B√°nh Quy, B√≠ Ng√¥ ƒë·ªÉ ƒë·ªïi v·∫≠t ph·∫©m s·ª± ki·ªán");
                                                }
                                            } else {
                                                Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                                            }
                                            break;
                                        case 1:
                                            if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                                                Item ve = InventoryService.gI().finditemnguyenlieuVe(player);
                                                Item giokeo = InventoryService.gI().finditemnguyenlieuGiokeo(player);

                                                if (ve != null && giokeo != null) {
                                                    Item Hopmaquy = ItemService.gI().createNewItem((short) 2017, 1);
                                                    // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                                                    InventoryService.gI().subQuantityItemsBag(player, ve, 3);
                                                    InventoryService.gI().subQuantityItemsBag(player, giokeo, 3);

                                                    Hopmaquy.itemOptions.add(new Item.ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, Hopmaquy, false);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "ƒê·ªïi qu√† s·ª± ki·ªán th√†nh c√¥ng");
                                                } else {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Vui l√≤ng chu·∫©n b·ªã x3 V√© ƒë·ªïi K·∫πo v√† x3 Gi·ªè k·∫πo ƒë·ªÉ ƒë·ªïi v·∫≠t ph·∫©m s·ª± ki·ªán");
                                                }
                                            } else {
                                                Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                                            }
                                            break;
                                        case 2:
                                            if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                                                Item ve = InventoryService.gI().finditemnguyenlieuVe(player);
                                                Item giokeo = InventoryService.gI().finditemnguyenlieuGiokeo(player);
                                                Item hopmaquy = InventoryService.gI()
                                                        .finditemnguyenlieuHopmaquy(player);

                                                if (ve != null && giokeo != null && hopmaquy != null) {
                                                    Item HopQuaHLW = ItemService.gI().createNewItem((short) 2012, 1);
                                                    // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                                                    InventoryService.gI().subQuantityItemsBag(player, ve, 3);
                                                    InventoryService.gI().subQuantityItemsBag(player, giokeo, 3);
                                                    InventoryService.gI().subQuantityItemsBag(player, hopmaquy, 3);

                                                    HopQuaHLW.itemOptions.add(new Item.ItemOption(74, 0));
                                                    HopQuaHLW.itemOptions.add(new Item.ItemOption(30, 0));
                                                    InventoryService.gI().addItemBag(player, HopQuaHLW, false);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "ƒê·ªïi qu√† h·ªôp qu√† s·ª± ki·ªán Halloween th√†nh c√¥ng");
                                                } else {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Vui l√≤ng chu·∫©n b·ªã x3 H·ªôp Ma Qu·ª∑, x3 V√© ƒë·ªïi K·∫πo v√† x3 Gi·ªè k·∫πo ƒë·ªÉ ƒë·ªïi v·∫≠t ph·∫©m s·ª± ki·ªán");
                                                }
                                            } else {
                                                Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                                            }
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPENED_DBKB) {
                                    switch (select) {
                                        case 0:
                                            if (player.isAdmin()
                                                    || player.nPoint.power >= BanDoKhoBau.POWER_CAN_GO_TO_DBKB) {
                                                ChangeMapService.gI().goToDBKB(player);
                                            } else {
                                                this.npcChat(player, "S·ª©c m·∫°nh c·ªßa con ph·∫£i √≠t nh·∫•t ph·∫£i ƒë·∫°t "
                                                        + Util.numberToMoney(BanDoKhoBau.POWER_CAN_GO_TO_DBKB));
                                            }
                                            break;

                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_DBKB) {
                                    switch (select) {
                                        case 0:
                                            if (player.isAdmin()
                                                    || player.nPoint.power >= BanDoKhoBau.POWER_CAN_GO_TO_DBKB) {
                                                Input.gI().createFormChooseLevelBDKB(player);
                                            } else {
                                                this.npcChat(player, "S·ª©c m·∫°nh c·ªßa con ph·∫£i √≠t nh·∫•t ph·∫£i ƒë·∫°t "
                                                        + Util.numberToMoney(BanDoKhoBau.POWER_CAN_GO_TO_DBKB));
                                            }
                                            break;
                                    }

                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_ACCEPT_GO_TO_BDKB) {
                                    switch (select) {
                                        case 0:
                                            BanDoKhoBauService.gI().openBanDoKhoBau(player,
                                                    Byte.parseByte(String.valueOf(PLAYERID_OBJECT.get(player.id))));
                                            break;
                                    }

                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.TRUONG_LAO_GURU:
                case ConstNpc.VUA_VEGETA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {

                            }
                        }
                    };
                    break;
                case ConstNpc.ONG_GOHAN:
                case ConstNpc.ONG_MOORI:
                case ConstNpc.ONG_PARAGUS:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Con c·ªë g·∫Øng theo %1 h·ªçc th√†nh t√†i, ƒë·ª´ng lo l·∫Øng cho ta."
                                                    .replaceAll("%1", player.gender == ConstPlayer.TRAI_DAT ? "Quy l√£o Kam√™"
                                                            : player.gender == ConstPlayer.NAMEC ? "Tr∆∞·ªüng l√£o Guru" : "Vua Vegeta"),
                                            "Nh·∫≠n qu√†\nt√¢n th·ªß", "Quy ƒê·ªïi");
                                    // , "ƒê·ªïi\nM·∫≠t Kh·∫©u"
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            this.createOtherMenu(player, ConstNpc.QUA_TAN_THU, "√îng c√≥ qu√† cho con ƒë√¢y n√†y",
                                                    "Nh·∫≠n 100k\nNg·ªçc xanh", "Nh·∫≠n\n2 T·ªâ V√†ng", "Nh·∫≠n\nƒê·ªá t·ª≠", "M√£ Qu√† T·∫∑ng");
                                            break;
                                        case 1:
                                            if (player.getSession().goldBar > 0) {
                                                this.createOtherMenu(player, ConstNpc.MENU_PHAN_THUONG, "Ta ƒëang gi·ªØ cho con "
                                                        + player.getSession().goldBar + " th·ªèi v√†ng, con c√≥ nh·∫≠n lu√¥n kh√¥ng?",
                                                        "Nh·∫≠n " + player.getSession().goldBar + "\nth·ªèi v√†ng", "T·ª´ ch·ªëi");
                                                //"R∆∞∆°ng Qu√†",
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.MENU_PHAN_THUONG, "Hi·ªán t·∫°i √¥ng kh√¥ng gi·ªØ c·ªßa con th·ªèi v√†ng n√†o c·∫£!",
                                                        "T·ª´ ch·ªëi");
                                                //"M·ªü r∆∞∆°ng\nqu√†",
                                            }
                                            break;
                                        case 2:
//                                            Input.gI().createFormChangePassword(player);
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.QUA_TAN_THU) {
                                    switch (select) {
                                        case 0:
//                                        if (!player.gift.gemTanThu) {
                                            if (true) {
                                                player.inventory.gem = 100000;
                                                Service.getInstance().sendMoney(player);
                                                Service.getInstance().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c 100K ng·ªçc xanh");
                                                player.gift.gemTanThu = true;
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU, "Con ƒë√£ nh·∫≠n ph·∫ßn qu√† n√†y r·ªìi m√†",
                                                        "ƒê√≥ng");
                                            }
                                            break;
                                        case 1:
                                            if (nhanVang) {
                                                player.inventory.gold = Inventory.LIMIT_GOLD;
                                                Service.getInstance().sendMoney(player);
                                                Service.getInstance().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c 2 t·ªâ v√†ng");
                                            } else {
                                                this.npcChat("T√≠nh nƒÉng Nh·∫≠n v√†ng ƒë√£ ƒë√≥ng.");
                                            }
                                            break;
                                        case 2:
                                            if (nhanDeTu) {
                                                if (player.pet == null) {
                                                    PetService.gI().createNormalPet(player);
                                                    Service.getInstance().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c ƒë·ªá t·ª≠");
                                                } else {
                                                    this.npcChat("Con ƒë√£ nh·∫≠n ƒë·ªá t·ª≠ r·ªìi");
                                                }
                                            } else {
                                                this.npcChat("T√≠nh nƒÉng Nh·∫≠n ƒë·ªá t·ª≠ ƒë√£ ƒë√≥ng.");
                                            }
                                            break;
                                        case 3:
                                            Input.gI().createFormGiftCode(player);
                                            break;

                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_PHAN_THUONG) {
                                    switch (select) {
//                                        case 0:
//                                            ShopService.gI().openBoxItemReward(player);
//                                            break;
                                        case 0:
                                            if (player.getSession().goldBar > 0) {
                                                if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                                                    int quantity = player.getSession().goldBar;
                                                    Item goldBar = ItemService.gI().createNewItem((short) 457, quantity);
                                                    InventoryService.gI().addItemBag(player, goldBar, false);
                                                    InventoryService.gI().sendItemBags(player);
                                                    this.npcChat(player, "√îng ƒë√£ ƒë·ªÉ " + quantity + " th·ªèi v√†ng v√†o h√†nh trang con r·ªìi ƒë·∫•y");
                                                    PlayerDAO.subGoldBar(player, quantity);
                                                    player.getSession().goldBar = 0;
                                                } else {
                                                    this.npcChat(player, "Con ph·∫£i c√≥ √≠t nh·∫•t 1 √¥ tr·ªëng trong h√†nh trang √¥ng m·ªõi ƒë∆∞a cho con ƒë∆∞·ª£c");
                                                }
                                            }
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;

                case ConstNpc.BUNMA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "C·∫≠u c·∫ßn trang b·ªã g√¨ c·ª© ƒë·∫øn ch·ªó t√¥i nh√©", "C·ª≠a\nh√†ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0://Shop
                                            if (player.gender == ConstPlayer.TRAI_DAT) {
                                                this.openShopWithGender(player, ConstNpc.SHOP_BUNMA_QK_0, 0);
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU, "Xin l·ªói c∆∞ng, ch·ªã ch·ªâ b√°n ƒë·ªì cho ng∆∞·ªùi Tr√°i ƒê·∫•t", "ƒê√≥ng");
                                            }
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.DENDE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Anh c·∫ßn trang b·ªã g√¨ c·ª© ƒë·∫øn ch·ªó em nh√©", "C·ª≠a\nh√†ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0://Shop
                                            if (player.gender == ConstPlayer.NAMEC) {
                                                this.openShopWithGender(player, ConstNpc.SHOP_DENDE_0, 0);
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU, "Xin l·ªói anh, em ch·ªâ b√°n ƒë·ªì cho d√¢n t·ªôc Nam·∫øc", "ƒê√≥ng");
                                            }
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.APPULE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ng∆∞∆°i c·∫ßn trang b·ªã g√¨ c·ª© ƒë·∫øn ch·ªó ta nh√©", "C·ª≠a\nh√†ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0://Shop
                                            if (player.gender == ConstPlayer.XAYDA) {
                                                this.openShopWithGender(player, ConstNpc.SHOP_APPULE_0, 0);
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU, "V·ªÅ h√†nh tinh h·∫° ƒë·∫≥ng c·ªßa ng∆∞∆°i m√† mua ƒë·ªì c√πi nh√©. T·∫°i ƒë√¢y ta ch·ªâ b√°n ƒë·ªì cho ng∆∞·ªùi Xayda th√¥i", "ƒê√≥ng");
                                            }
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.DR_DRIEF:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                if (this.mapId == 84) {
                                    this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                            "T√†u V≈© Tr·ª• c·ªßa ta c√≥ th·ªÉ ƒë∆∞a c·∫≠u ƒë·∫øn h√†nh tinh kh√°c ch·ªâ trong 3 gi√¢y. C·∫≠u mu·ªën ƒëi ƒë√¢u?",
                                            pl.gender == ConstPlayer.TRAI_DAT ? "ƒê·∫øn\nTr√°i ƒê·∫•t" : pl.gender == ConstPlayer.NAMEC ? "ƒê·∫øn\nNam·∫øc" : "ƒê·∫øn\nXayda");
                                } else if (!TaskService.gI().checkDoneTaskTalkNpc(pl, this)) {
                                    if (pl.playerTask.taskMain.id == 7) {
                                        NpcService.gI().createTutorial(pl, this.avartar, "H√£y l√™n ƒë∆∞·ªùng c·ª©u ƒë·ª©a b√© nh√† t√¥i\n"
                                                + "Ch·∫Øc b√¢y gi·ªù n√≥ ƒëang s·ª£ h√£i l·∫Øm r·ªìi");
                                    } else {
                                        this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                "T√†u V≈© Tr·ª• c·ªßa ta c√≥ th·ªÉ ƒë∆∞a c·∫≠u ƒë·∫øn h√†nh tinh kh√°c ch·ªâ trong 3 gi√¢y. C·∫≠u mu·ªën ƒëi ƒë√¢u?",
                                                "ƒê·∫øn\nNam·∫øc", "ƒê·∫øn\nXayda", "Si√™u th·ªã");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 84) {
                                    ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 24, -1, -1);
                                } else if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 25, -1, -1);
                                            break;
                                        case 1:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 26, -1, -1);
                                            break;
                                        case 2:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 84, -1, -1);
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CARGO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(pl, this)) {
                                    if (pl.playerTask.taskMain.id == 7) {
                                        NpcService.gI().createTutorial(pl, this.avartar, "H√£y l√™n ƒë∆∞·ªùng c·ª©u ƒë·ª©a b√© nh√† t√¥i\n"
                                                + "Ch·∫Øc b√¢y gi·ªù n√≥ ƒëang s·ª£ h√£i l·∫Øm r·ªìi");
                                    } else {
                                        this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                "T√†u V≈© Tr·ª• c·ªßa ta c√≥ th·ªÉ ƒë∆∞a c·∫≠u ƒë·∫øn h√†nh tinh kh√°c ch·ªâ trong 3 gi√¢y. C·∫≠u mu·ªën ƒëi ƒë√¢u?",
                                                "ƒê·∫øn\nTr√°i ƒê·∫•t", "ƒê·∫øn\nXayda", "Si√™u th·ªã");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 24, -1, -1);
                                            break;
                                        case 1:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 26, -1, -1);
                                            break;
                                        case 2:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 84, -1, -1);
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CUI:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        private final int COST_FIND_BOSS = 20000000;

                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(pl, this)) {
                                    if (pl.playerTask.taskMain.id == 7) {
                                        NpcService.gI().createTutorial(pl, this.avartar, "H√£y l√™n ƒë∆∞·ªùng c·ª©u ƒë·ª©a b√© nh√† t√¥i\n"
                                                + "Ch·∫Øc b√¢y gi·ªù n√≥ ƒëang s·ª£ h√£i l·∫Øm r·ªìi");
                                    } else {
                                        if (this.mapId == 19) {

                                            int taskId = TaskService.gI().getIdTask(pl);
                                            switch (taskId) {
                                                case ConstTask.TASK_19_0:
                                                    this.createOtherMenu(pl, ConstNpc.MENU_FIND_KUKU,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn ch·ªó\nKuku\n(" + Util.numberToMoney(COST_FIND_BOSS) + " v√†ng)", "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");
                                                    break;
                                                case ConstTask.TASK_19_1:
                                                    this.createOtherMenu(pl, ConstNpc.MENU_FIND_MAP_DAU_DINH,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn ch·ªó\nM·∫≠p ƒë·∫ßu ƒëinh\n(" + Util.numberToMoney(COST_FIND_BOSS) + " v√†ng)", "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");
                                                    break;
                                                case ConstTask.TASK_19_2:
                                                    this.createOtherMenu(pl, ConstNpc.MENU_FIND_RAMBO,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn ch·ªó\nRambo\n(" + Util.numberToMoney(COST_FIND_BOSS) + " v√†ng)", "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");
                                                    break;
                                                default:
                                                    this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");

                                                    break;
                                            }
                                        } else if (this.mapId == 68) {
                                            this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                    "Ng∆∞∆°i mu·ªën v·ªÅ Th√†nh Ph·ªë Vegeta", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                        } else {
                                            this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                    "T√†u v≈© tr·ª• Xayda s·ª≠ d·ª•ng c√¥ng ngh·ªá m·ªõi nh·∫•t, "
                                                    + "c√≥ th·ªÉ ƒë∆∞a ng∆∞∆°i ƒëi b·∫•t k·ª≥ ƒë√¢u, ch·ªâ c·∫ßn tr·∫£ ti·ªÅn l√† ƒë∆∞·ª£c.",
                                                    "ƒê·∫øn\nTr√°i ƒê·∫•t", "ƒê·∫øn\nNam·∫øc", "Si√™u th·ªã");
                                        }
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 26) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 24, -1, -1);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 25, -1, -1);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 84, -1, -1);
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == 19) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_FIND_KUKU) {
                                        switch (select) {
                                            case 0:
                                                Boss boss = BossManager.gI().getBossById(BossFactory.KUKU);
                                                if (boss != null && !boss.isDie()) {
                                                    if (player.inventory.gold >= COST_FIND_BOSS) {
                                                        player.inventory.gold -= COST_FIND_BOSS;
                                                        ChangeMapService.gI().changeMap(player, boss.zone, boss.location.x, boss.location.y);
                                                        Service.getInstance().sendMoney(player);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                + Util.numberToMoney(COST_FIND_BOSS - player.inventory.gold) + " v√†ng");
                                                    }
                                                }
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_FIND_MAP_DAU_DINH) {
                                        switch (select) {
                                            case 0:
                                                Boss boss = BossManager.gI().getBossById(BossFactory.MAP_DAU_DINH);
                                                if (boss != null && !boss.isDie()) {
                                                    if (player.inventory.gold >= COST_FIND_BOSS) {
                                                        player.inventory.gold -= COST_FIND_BOSS;
                                                        ChangeMapService.gI().changeMap(player, boss.zone, boss.location.x, boss.location.y);
                                                        Service.getInstance().sendMoney(player);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                + Util.numberToMoney(COST_FIND_BOSS - player.inventory.gold) + " v√†ng");
                                                    }
                                                }
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_FIND_RAMBO) {
                                        switch (select) {
                                            case 0:
                                                Boss boss = BossManager.gI().getBossById(BossFactory.RAMBO);
                                                if (boss != null && !boss.isDie()) {
                                                    if (player.inventory.gold >= COST_FIND_BOSS) {
                                                        player.inventory.gold -= COST_FIND_BOSS;
                                                        ChangeMapService.gI().changeMap(player, boss.zone, boss.location.x, boss.location.y);
                                                        Service.getInstance().sendMoney(player);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                + Util.numberToMoney(COST_FIND_BOSS - player.inventory.gold) + " v√†ng");
                                                    }
                                                }
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == 68) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 19, -1, 1100);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.SANTA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "Xin ch√†o, ta c√≥ m·ªôt s·ªë v·∫≠t ph·∫©m ƒë·∫∑t bi·ªát c·∫≠u c√≥ mu·ªën xem kh√¥ng?",
                                        "C·ª≠a h√†ng");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 5 || this.mapId == 13 || this.mapId == 20) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0: //shop
                                                this.openShopWithGender(player, ConstNpc.SHOP_SANTA_0, 0);
                                                break;
                                            case 1: //ti·ªám h·ªõt t√≥c
                                                this.openShopWithGender(player, ConstNpc.SHOP_SANTA_1, 1);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.URON:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                this.openShopWithGender(pl, ConstNpc.SHOP_URON_0, 0);
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {

                            }
                        }
                    };
                    break;
                case ConstNpc.BA_HAT_MIT:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 5) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                            "√âp sao\ntrang b·ªã", "Pha l√™\nh√≥a\ntrang b·ªã",
                                            "ƒê·ªïi V√©\nH·ªßy Di·ªát", "ƒê·ªïi ƒê·ªì\nK√≠ch Ho·∫°t");
                                } else if (this.mapId == 121) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                            "V·ªÅ ƒë·∫£o\nr√πa");

                                } else {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                            "C·ª≠a h√†ng\nB√πa", "N√¢ng c·∫•p\nV·∫≠t ph·∫©m",
                                            "N√¢ng c·∫•p\nB√¥ng tai\nPorata", "L√†m ph√©p\nNh·∫≠p ƒë√°",
                                            "Nh·∫≠p\nNg·ªçc R·ªìng", "N√¢ng c·∫•p\nCh·ªâ S·ªë\nPorata");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 5) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
//                                                CombineService.gI().openTabCombine(player, CombineService.EP_SAO_TRANG_BI);
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.EP_SAO_TRANG_BI);
                                                break;
                                            case 1:
                                                this.createOtherMenu(player, ConstNpc.MENU_PHA_LE_HOA_TRANG_BI,
                                                        "Ng∆∞∆°i mu·ªën pha l√™ h√≥a trang b·ªã b·∫±ng c√°ch n√†o?", "B·∫±ng ng·ªçc", "T·ª´ ch·ªëi");
                                                break;
//                                            case 2:
//                                                this.createOtherMenu(player, ConstNpc.MENU_PHA_LE_HOA_TRANG_BI,
//                                                        "Ta s·∫Ω bi·∫øn trang b·ªã m·ªõi cao c·∫•p h∆°n c·ªßa ng∆∞∆°i\nth√†nh trang"
//                                                        + " b·ªã c√≥ c·∫•p ƒë·ªô v√† sao pha l√™ c·ªßa trang b·ªã c≈©", "Chuy·ªÉn\nh√≥a\nD√πng v√†ng",
//                                                        "Chuy·ªÉn\nh√≥a\nD√πng ng·ªçc");
//                                                break;
                                            case 2:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.DOI_VE_HUY_DIET);
                                                break;
                                            case 3:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.DAP_SET_KICH_HOAT);
                                                break;
//                                            case 5:
//                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.DOI_MANH_KICH_HOAT);
//                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_PHA_LE_HOA_TRANG_BI) {
                                        switch (select) {
                                            case 0:
//                                                CombineService.gI().openTabCombine(player, CombineService.PHA_LE_HOA_TRANG_BI);
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.PHA_LE_HOA_TRANG_BI);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_CHUYEN_HOA_TRANG_BI) {
                                        switch (select) {
//                                            case 0:
//                                                CombineService.gI().openTabCombine(player, CombineService.CHUYEN_HOA_TRANG_BI); //by gold
//                                                break;
//                                            case 1:
//                                                CombineService.gI().openTabCombine(player, CombineService.CHUYEN_HOA_TRANG_BI); //by gold
//                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_START_COMBINE) {
                                        switch (player.combineNew.typeCombine) {
                                            case CombineServiceNew.EP_SAO_TRANG_BI:
                                            case CombineServiceNew.PHA_LE_HOA_TRANG_BI:
//                                            case CombineServiceNew.CHUYEN_HOA_TRANG_BI:
                                            case CombineServiceNew.DOI_VE_HUY_DIET:
                                            case CombineServiceNew.DAP_SET_KICH_HOAT:
//                                            case CombineServiceNew.DOI_MANH_KICH_HOAT:
                                                if (select == 0) {
                                                    CombineServiceNew.gI().startCombine(player);
                                                }
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 112) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 5, -1, 1156);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 42 || this.mapId == 43 || this.mapId == 44) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0: //shop b√πa
                                                createOtherMenu(player, ConstNpc.MENU_OPTION_SHOP_BUA,
                                                        "B√πa c·ªßa ta r·∫•t l·ª£i h·∫°i, nh√¨n ng∆∞∆°i y·∫øu ƒëu·ªëi th·∫ø n√†y, ch·∫Øc mu·ªën mua b√πa ƒë·ªÉ "
                                                        + "m·∫°nh m·∫Ω √†, mua kh√¥ng ta b√°n cho, x√†i r·ªìi l·∫°i th√≠ch cho m√† xem.",
                                                        "B√πa\n1 gi·ªù", "B√πa\n8 gi·ªù", "B√πa\n1 th√°ng", "ƒê√≥ng");
                                                break;
                                            case 1:
//                                                CombineService.gI().openTabCombine(player, CombineService.NANG_CAP_TRANG_BI);
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.NANG_CAP_VAT_PHAM);
                                                break;
                                            case 2: //n√¢ng c·∫•p b√¥ng tai
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.NANG_CAP_BONG_TAI);
                                                break;
                                            case 3: //l√†m ph√©p nh·∫≠p ƒë√°
                                                break;
                                            case 4:
//                                                CombineService.gI().openTabCombine(player, CombineService.NHAP_NGOC_RONG);
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.NHAP_NGOC_RONG);
                                                break;
                                            case 5:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.MO_CHI_SO_BONG_TAI);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_SHOP_BUA) {
                                        switch (select) {
                                            case 0:
                                                ShopService.gI().openShopBua(player, ConstNpc.SHOP_BA_HAT_MIT_0, 0);
                                                break;
                                            case 1:
                                                ShopService.gI().openShopBua(player, ConstNpc.SHOP_BA_HAT_MIT_1, 1);
                                                break;
                                            case 2:
                                                ShopService.gI().openShopBua(player, ConstNpc.SHOP_BA_HAT_MIT_2, 2);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_START_COMBINE) {
                                        switch (player.combineNew.typeCombine) {
                                            case CombineServiceNew.NANG_CAP_VAT_PHAM:
                                            case CombineServiceNew.NANG_CAP_BONG_TAI:
                                            case CombineServiceNew.LAM_PHEP_NHAP_DA:
                                            case CombineServiceNew.NHAP_NGOC_RONG:
                                                if (select == 0) {
                                                    CombineServiceNew.gI().startCombine(player);
                                                }
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.RUONG_DO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                InventoryService.gI().sendItemBox(player);
                                InventoryService.gI().openBox(player);
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {

                            }
                        }
                    };
                    break;
                case ConstNpc.DAU_THAN:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                player.magicTree.openMenuTree();
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                TaskService.gI().checkDoneTaskConfirmMenuNpc(player, this, (byte) select);
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.MAGIC_TREE_NON_UPGRADE_LEFT_PEA:
                                        if (select == 0) {
                                            player.magicTree.harvestPea();
                                        } else if (select == 1) {
                                            if (player.magicTree.level == 10) {
                                                player.magicTree.fastRespawnPea();
                                            } else {
                                                player.magicTree.showConfirmUpgradeMagicTree();
                                            }
                                        } else if (select == 2) {
                                            player.magicTree.fastRespawnPea();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_NON_UPGRADE_FULL_PEA:
                                        if (select == 0) {
                                            player.magicTree.harvestPea();
                                        } else if (select == 1) {
                                            player.magicTree.showConfirmUpgradeMagicTree();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_CONFIRM_UPGRADE:
                                        if (select == 0) {
                                            player.magicTree.upgradeMagicTree();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_UPGRADE:
                                        if (select == 0) {
                                            player.magicTree.fastUpgradeMagicTree();
                                        } else if (select == 1) {
                                            player.magicTree.showConfirmUnuppgradeMagicTree();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_CONFIRM_UNUPGRADE:
                                        if (select == 0) {
                                            player.magicTree.unupgradeMagicTree();
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CALICK:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        private final byte COUNT_CHANGE = 50;
                        private int count;

                        private void changeMap() {
                            if (this.mapId != 102) {
                                count++;
                                if (this.count >= COUNT_CHANGE) {
                                    count = 0;
                                    this.map.npcs.remove(this);
                                    Map map = MapService.gI().getMapForCalich();
                                    this.mapId = map.mapId;
                                    this.cx = Util.nextInt(100, map.mapWidth - 100);
                                    this.cy = map.yPhysicInTop(this.cx, 0);
                                    this.map = map;
                                    this.map.npcs.add(this);
                                }
                            }
                        }

                        @Override
                        public void openBaseMenu(Player player) {
                            player.iDMark.setIndexMenu(ConstNpc.BASE_MENU);
                            if (TaskService.gI().getIdTask(player) < ConstTask.TASK_20_0) {
                                Service.getInstance().hideWaitDialog(player);
                                Service.getInstance().sendThongBao(player, "Kh√¥ng th·ªÉ th·ª±c hi·ªán");
                                return;
                            }
                            if (this.mapId != player.zone.map.mapId) {
                                Service.getInstance().sendThongBao(player, "Cal√≠ch ƒë√£ r·ªùi kh·ªèi map!");
                                Service.getInstance().hideWaitDialog(player);
                                return;
                            }

                            if (this.mapId == 102) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "Ch√†o ch√∫, ch√°u c√≥ th·ªÉ gi√∫p g√¨?",
                                        "K·ªÉ\nChuy·ªán", "Quay v·ªÅ\nQu√° kh·ª©");
                            } else {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "Ch√†o ch√∫, ch√°u c√≥ th·ªÉ gi√∫p g√¨?", "K·ªÉ\nChuy·ªán", "ƒêi ƒë·∫øn\nT∆∞∆°ng lai", "T·ª´ ch·ªëi");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (this.mapId == 102) {
                                if (player.iDMark.isBaseMenu()) {
                                    if (select == 0) {
                                        //k·ªÉ chuy·ªán
                                        NpcService.gI().createTutorial(player, this.avartar, ConstNpc.CALICK_KE_CHUYEN);
                                    } else if (select == 1) {
                                        //v·ªÅ qu√° kh·ª©
                                        ChangeMapService.gI().goToQuaKhu(player);
                                    }
                                }
                            } else if (player.iDMark.isBaseMenu()) {
                                if (select == 0) {
                                    //k·ªÉ chuy·ªán
                                    NpcService.gI().createTutorial(player, this.avartar, ConstNpc.CALICK_KE_CHUYEN);
                                } else if (select == 1) {
                                    //ƒë·∫øn t∆∞∆°ng lai
//                                    changeMap();
                                    if (TaskService.gI().getIdTask(player) >= ConstTask.TASK_20_0) {
                                        ChangeMapService.gI().goToTuongLai(player);
                                    }
                                } else {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng th·ªÉ th·ª±c hi·ªán");
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.JACO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 24) {
                                    if (player.iDMark.isBaseMenu()) {
                                        if (select == 0) {
                                            //ƒë·∫øn potaufeu
                                            ChangeMapService.gI().goToPotaufeu(player);
                                        }
                                    }
                                } else if (this.mapId == 139) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 24, -1, -1);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 25, -1, -1);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 26, -1, -1);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.THUONG_DE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 45) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Con mu·ªën l√†m g√¨ n√†o", "ƒê·∫øn Kaio", "Quay s·ªë\nmay m·∫Øn");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 45) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 48, -1, 354);
                                                break;
                                            case 1:
                                                this.createOtherMenu(player, ConstNpc.MENU_CHOOSE_LUCKY_ROUND,
                                                        "Con mu·ªën l√†m g√¨ n√†o?", "Quay b·∫±ng\nv√†ng",
                                                        "R∆∞∆°ng ph·ª•\n("
                                                        + (player.inventory.itemsBoxCrackBall.size()
                                                        - InventoryService.gI().getCountEmptyListItem(player.inventory.itemsBoxCrackBall))
                                                        + " m√≥n)",
                                                        "X√≥a h·∫øt\ntrong r∆∞∆°ng", "ƒê√≥ng");
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_CHOOSE_LUCKY_ROUND) {
                                        switch (select) {
                                            case 0:
                                                LuckyRound.gI().openCrackBallUI(player, LuckyRound.USING_GOLD);
                                                break;
                                            case 1:
                                                ShopService.gI().openBoxItemLuckyRound(player);
                                                break;
                                            case 2:
                                                NpcService.gI().createMenuConMeo(player,
                                                        ConstNpc.CONFIRM_REMOVE_ALL_ITEM_LUCKY_ROUND, this.avartar,
                                                        "Con c√≥ ch·∫Øc mu·ªën x√≥a h·∫øt v·∫≠t ph·∫©m trong r∆∞∆°ng ph·ª•? Sau khi x√≥a "
                                                        + "s·∫Ω kh√¥ng th·ªÉ kh√¥i ph·ª•c!",
                                                        "ƒê·ªìng √Ω", "H·ªßy b·ªè");
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };

                    break;
                case ConstNpc.THAN_VU_TRU:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 48) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Con mu·ªën l√†m g√¨ n√†o", "Di chuy·ªÉn");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 48) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                this.createOtherMenu(player, ConstNpc.MENU_DI_CHUYEN,
                                                        "Con mu·ªën ƒëi ƒë√¢u?", "V·ªÅ\nth·∫ßn ƒëi·ªán", "Th√°nh ƒë·ªãa\nKaio", "Con\nƒë∆∞·ªùng\nr·∫Øn ƒë·ªôc", "T·ª´ ch·ªëi");
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_DI_CHUYEN) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 45, -1, 354);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMap(player, 50, -1, 318, 336);
                                                break;
                                            case 2:
                                                //con ƒë∆∞·ªùng r·∫Øn ƒë·ªôc
                                                break;
                                        }
                                    }
                                }
                            }
                        }

                    };
                    break;
                case ConstNpc.KIBIT:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "ƒê·∫øn\nKaio", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 48, -1, 354, 240);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.OSIN:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "ƒê·∫øn\nKaio", "ƒê·∫øn\nh√†nh tinh\nBill", "T·ª´ ch·ªëi");
                                } else if (this.mapId == 154) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "V·ªÅ th√°nh ƒë·ªãa", "ƒê·∫øn\nh√†nh tinh\nng·ª•c t√π", "T·ª´ ch·ªëi");
                                } else if (this.mapId == 155) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                } else if (this.mapId == 52) {
                                    try {
                                        MapMaBu.gI().setTimeJoinMapMaBu();
                                        if (this.mapId == 52) {
                                            long now = System.currentTimeMillis();
                                            if (now > MapMaBu.TIME_OPEN_MABU && now < MapMaBu.TIME_CLOSE_MABU) {
                                                this.createOtherMenu(player, ConstNpc.MENU_OPEN_MMB, "ƒê·∫°i chi·∫øn Ma B∆∞ ƒë√£ m·ªü, "
                                                        + "ng∆∞∆°i c√≥ mu·ªën tham gia kh√¥ng?",
                                                        "H∆∞·ªõng d·∫´n\nth√™m", "Tham gia", "T·ª´ ch·ªëi");
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.MENU_NOT_OPEN_MMB,
                                                        "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i?", "H∆∞·ªõng d·∫´n", "T·ª´ ch·ªëi");
                                            }

                                        }
                                    } catch (Exception ex) {
                                        Logger.error("L·ªói m·ªü menu osin");
                                    }
                                } else if (this.mapId >= 114 && this.mapId < 120 && this.mapId != 116) {
                                    if (player.fightMabu.pointMabu >= player.fightMabu.POINT_MAX) {
                                        this.createOtherMenu(player, ConstNpc.GO_UPSTAIRS_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                                "L√™n T·∫ßng!", "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                                "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                    }
                                } else if (this.mapId == 120) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 48, -1, 354, 240);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMap(player, 154, -1, 200, 312);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 154) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 50, -1, 318, 336);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMap(player, 155, -1, 111, 792);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 155) {
                                    if (player.iDMark.isBaseMenu()) {
                                        if (select == 0) {
                                            ChangeMapService.gI().changeMap(player, 154, -1, 200, 312);
                                        }
                                    }
                                } else if (this.mapId == 52) {
                                    switch (player.iDMark.getIndexMenu()) {
                                        case ConstNpc.MENU_REWARD_MMB:
                                            break;
                                        case ConstNpc.MENU_OPEN_MMB:
                                            if (select == 0) {
                                                NpcService.gI().createTutorial(player, this.avartar, ConstNpc.HUONG_DAN_MAP_MA_BU);
                                            } else if (select == 1) {
//                                    if (!player.getSession().actived) {
//                                        Service.getInstance().sendThongBao(player, "Vui l√≤ng k√≠ch ho·∫°t t√†i kho·∫£n ƒë·ªÉ s·ª≠ d·ª•ng ch·ª©c nƒÉng n√†y");
//                                    } else
                                                ChangeMapService.gI().changeMap(player, 114, -1, 318, 336);
                                            }
                                            break;
                                        case ConstNpc.MENU_NOT_OPEN_BDW:
                                            if (select == 0) {
                                                NpcService.gI().createTutorial(player, this.avartar, ConstNpc.HUONG_DAN_MAP_MA_BU);
                                            }
                                            break;
                                    }
                                } else if (this.mapId >= 114 && this.mapId < 120 && this.mapId != 116) {
                                    if (player.iDMark.getIndexMenu() == ConstNpc.GO_UPSTAIRS_MENU) {
                                        if (select == 0) {
                                            player.fightMabu.clear();
                                            ChangeMapService.gI().changeMap(player, this.map.mapIdNextMabu((short) this.mapId), -1, this.cx, this.cy);
                                        } else if (select == 1) {
                                            ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, 0, -1);
                                        }
                                    } else {
                                        if (select == 0) {
                                            ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, 0, -1);
                                        }
                                    }
                                } else if (this.mapId == 120) {
                                    if (player.iDMark.getIndexMenu() == ConstNpc.BASE_MENU) {
                                        if (select == 0) {
                                            ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, 0, -1);
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.LINH_CANH:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (player.clan == null) {
                                    this.createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                            "Ch·ªâ ti·∫øp c√°c bang h·ªôi, mi·ªÖn ti·∫øp kh√°ch v√£ng lai", "ƒê√≥ng");
                                } else if (player.clan.getMembers().size() < 0) {
//                                } else if (player.clan.getMembers().size() < 1) {
                                    this.createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                            "Bang h·ªôi ph·∫£i c√≥ √≠t nh·∫•t 5 th√†nh vi√™n m·ªõi c√≥ th·ªÉ m·ªü", "ƒê√≥ng");
                                } else {
                                    if (!player.clan.haveGoneDoanhTrai && player.clan.timeOpenDoanhTrai != 0) {
                                        createOtherMenu(player, ConstNpc.MENU_VAO_DT,
                                                "Bang h·ªôi c·ªßa ng∆∞∆°i ƒëang ƒë√°nh tr·∫°i ƒë·ªôc nh√£n\n"
                                                + "Th·ªùi gian c√≤n l·∫°i l√† "
                                                + TimeUtil.getSecondLeft(player.clan.timeOpenDoanhTrai, DoanhTrai.TIME_DOANH_TRAI / 1000)
                                                + ". Ng∆∞∆°i c√≥ mu·ªën tham gia kh√¥ng?",
                                                "Tham gia", "Kh√¥ng", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                    } else {
                                        List<Player> plSameClans = new ArrayList<>();
                                        List<Player> playersMap = player.zone.getPlayers();
                                        for (Player pl : playersMap) {
                                            if (!pl.equals(player) && pl.clan != null
                                                    && pl.clan.id == player.clan.id && pl.location.x >= 1285
                                                    && pl.location.x <= 1645) {
                                                plSameClans.add(pl);
                                            }

                                        }
//                                        if (plSameClans.size() >= 0) {
                                        if (plSameClans.size() >= 0) {
                                            if (!player.isAdmin()
                                                    && player.clanMember.getNumDateFromJoinTimeToToday() < DoanhTrai.DATE_WAIT_FROM_JOIN_CLAN) {
                                                createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                                        "Bang h·ªôi ch·ªâ cho ph√©p nh·ªØng ng∆∞·ªùi ·ªü trong bang tr√™n 1 ng√†y. H·∫πn ng∆∞∆°i quay l·∫°i v√†o l√∫c kh√°c",
                                                        "OK", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                            } else if (player.clan.haveGoneDoanhTrai) {
                                                createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                                        "Bang h·ªôi c·ªßa ng∆∞∆°i ƒë√£ ƒëi tr·∫°i l√∫c " + Util.formatTime(player.clan.timeOpenDoanhTrai) + " h√¥m nay. Ng∆∞·ªùi m·ªü\n"
                                                        + "(" + player.clan.playerOpenDoanhTrai.name + "). H·∫πn ng∆∞∆°i quay l·∫°i v√†o ng√†y mai", "OK", "H∆∞·ªõng\nd·∫´n\nth√™m");

                                            } else {
                                                createOtherMenu(player, ConstNpc.MENU_CHO_VAO_DT,
                                                        "H√¥m nay bang h·ªôi c·ªßa ng∆∞∆°i ch∆∞a v√†o tr·∫°i l·∫ßn n√†o. Ng∆∞∆°i c√≥ mu·ªën v√†o\n"
                                                        + "kh√¥ng?\nƒê·ªÉ v√†o, ta khuy√™n ng∆∞∆°i n√™n c√≥ 3-4 ng∆∞·ªùi c√πng bang ƒëi c√πng",
                                                        "V√†o\n(mi·ªÖn ph√≠)", "Kh√¥ng", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                            }
                                        } else {
                                            createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                                    "Ng∆∞∆°i ph·∫£i c√≥ √≠t nh·∫•t 2 ƒë·ªìng ƒë·ªôi c√πng bang ƒë·ª©ng g·∫ßn m·ªõi c√≥ th·ªÉ\nv√†o\n"
                                                    + "tuy nhi√™n ta khuy√™n ng∆∞∆°i n√™n ƒëi c√πng v·ªõi 3-4 ng∆∞·ªùi ƒë·ªÉ kh·ªèi ch·∫øt.\n"
                                                    + "Hahaha.", "OK", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                        }
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 27) {
                                    switch (player.iDMark.getIndexMenu()) {
                                        case ConstNpc.MENU_KHONG_CHO_VAO_DT:
                                            if (select == 1) {
                                                NpcService.gI().createTutorial(player, this.avartar, ConstNpc.HUONG_DAN_DOANH_TRAI);
                                            }
                                            break;
                                        case ConstNpc.MENU_CHO_VAO_DT:
                                            switch (select) {
                                                case 0:
                                                    DoanhTraiService.gI().openDoanhTrai(player);
                                                    break;
                                                case 2:
                                                    NpcService.gI().createTutorial(player, this.avartar, ConstNpc.HUONG_DAN_DOANH_TRAI);
                                                    break;
                                            }
                                            break;
                                        case ConstNpc.MENU_VAO_DT:
                                            switch (select) {
                                                case 0:
                                                    ChangeMapService.gI().changeMap(player, 53, 0, 35, 432);
                                                    break;
                                                case 2:
                                                    NpcService.gI().createTutorial(player, this.avartar, ConstNpc.HUONG_DAN_DOANH_TRAI);
                                                    break;
                                            }
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.QUA_TRUNG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        private final int COST_AP_TRUNG_NHANH = 1000000000;

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                player.mabuEgg.sendMabuEgg();
                                if (player.mabuEgg.getSecondDone() != 0) {
                                    this.createOtherMenu(player, ConstNpc.CAN_NOT_OPEN_EGG, "B∆∞ b∆∞ b∆∞...",
                                            "H·ªßy b·ªè\ntr·ª©ng", "·∫§p nhanh\n" + Util.numberToMoney(COST_AP_TRUNG_NHANH) + " v√†ng", "ƒê√≥ng");
                                } else {
                                    this.createOtherMenu(player, ConstNpc.CAN_OPEN_EGG, "B∆∞ b∆∞ b∆∞...", "N·ªü", "H·ªßy b·ªè\ntr·ª©ng", "ƒê√≥ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.CAN_NOT_OPEN_EGG:
                                        if (select == 0) {
                                            this.createOtherMenu(player, ConstNpc.CONFIRM_DESTROY_EGG,
                                                    "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy b·ªè tr·ª©ng Mab∆∞?", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                        } else if (select == 1) {
                                            if (player.inventory.gold >= COST_AP_TRUNG_NHANH) {
                                                player.inventory.gold -= COST_AP_TRUNG_NHANH;
                                                player.mabuEgg.timeDone = 0;
                                                Service.getInstance().sendMoney(player);
                                                player.mabuEgg.sendMabuEgg();
                                            } else {
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n kh√¥ng ƒë·ªß v√†ng ƒë·ªÉ th·ª±c hi·ªán, c√≤n thi·∫øu "
                                                        + Util.numberToMoney((COST_AP_TRUNG_NHANH - player.inventory.gold)) + " v√†ng");
                                            }
                                        }
                                        break;
                                    case ConstNpc.CAN_OPEN_EGG:
                                        switch (select) {
                                            case 0:
                                                this.createOtherMenu(player, ConstNpc.CONFIRM_OPEN_EGG,
                                                        "B·∫°n c√≥ ch·∫Øc ch·∫Øn cho tr·ª©ng n·ªü?\n"
                                                        + "ƒê·ªá t·ª≠ c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c thay th·∫ø b·∫±ng ƒë·ªá Mab∆∞",
                                                        "ƒê·ªá mab∆∞\nTr√°i ƒê·∫•t", "ƒê·ªá mab∆∞\nNam·∫øc", "ƒê·ªá mab∆∞\nXayda", "T·ª´ ch·ªëi");
                                                break;
                                            case 1:
                                                this.createOtherMenu(player, ConstNpc.CONFIRM_DESTROY_EGG,
                                                        "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy b·ªè tr·ª©ng Mab∆∞?", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                break;
                                        }
                                        break;
                                    case ConstNpc.CONFIRM_OPEN_EGG:
                                        switch (select) {
                                            case 0:
                                                player.mabuEgg.openEgg(ConstPlayer.TRAI_DAT);
                                                break;
                                            case 1:
                                                player.mabuEgg.openEgg(ConstPlayer.NAMEC);
                                                break;
                                            case 2:
                                                player.mabuEgg.openEgg(ConstPlayer.XAYDA);
                                                break;
                                            default:
                                                break;
                                        }
                                        break;
                                    case ConstNpc.CONFIRM_DESTROY_EGG:
                                        if (select == 0) {
                                            player.mabuEgg.destroyEgg();
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.QUOC_VUONG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                    "Con mu·ªën n√¢ng gi·ªõi h·∫°n s·ª©c m·∫°nh cho b·∫£n th√¢n hay ƒë·ªá t·ª≠?",
                                    "B·∫£n th√¢n", "ƒê·ªá t·ª≠", "T·ª´ ch·ªëi");
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            if (player.nPoint.limitPower < NPoint.MAX_LIMIT) {
                                                this.createOtherMenu(player, ConstNpc.OPEN_POWER_MYSEFT,
                                                        "Ta s·∫Ω tru·ªÅn nƒÉng l∆∞·ª£ng gi√∫p con m·ªü gi·ªõi h·∫°n s·ª©c m·∫°nh c·ªßa b·∫£n th√¢n l√™n "
                                                        + Util.numberToMoney(player.nPoint.getPowerNextLimit()),
                                                        "N√¢ng\ngi·ªõi h·∫°n\ns·ª©c m·∫°nh",
                                                        "N√¢ng ngay\n" + Util.numberToMoney(OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER) + " v√†ng", "ƒê√≥ng");
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                        "S·ª©c m·∫°nh c·ªßa con ƒë√£ ƒë·∫°t t·ªõi gi·ªõi h·∫°n",
                                                        "ƒê√≥ng");
                                            }
                                            break;
                                        case 1:
                                            if (player.pet != null) {
                                                if (player.pet.nPoint.limitPower < NPoint.MAX_LIMIT) {
                                                    this.createOtherMenu(player, ConstNpc.OPEN_POWER_PET,
                                                            "Ta s·∫Ω tru·ªÅn nƒÉng l∆∞·ª£ng gi√∫p con m·ªü gi·ªõi h·∫°n s·ª©c m·∫°nh c·ªßa ƒë·ªá t·ª≠ l√™n "
                                                            + Util.numberToMoney(player.pet.nPoint.getPowerNextLimit()),
                                                            "N√¢ng ngay\n" + Util.numberToMoney(OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER) + " v√†ng", "ƒê√≥ng");
                                                } else {
                                                    this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                            "S·ª©c m·∫°nh c·ªßa ƒë·ªá con ƒë√£ ƒë·∫°t t·ªõi gi·ªõi h·∫°n",
                                                            "ƒê√≥ng");
                                                }
                                            } else {
                                                Service.getInstance().sendThongBao(player, "Kh√¥ng th·ªÉ th·ª±c hi·ªán");
                                            }
                                            //gi·ªõi h·∫°n ƒë·ªá t·ª≠
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.OPEN_POWER_MYSEFT) {
                                    switch (select) {
                                        case 0:
                                            OpenPowerService.gI().openPowerBasic(player);
                                            break;
                                        case 1:
                                            if (player.inventory.gold >= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER) {
                                                if (OpenPowerService.gI().openPowerSpeed(player)) {
                                                    player.inventory.gold -= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER;
                                                    Service.getInstance().sendMoney(player);
                                                }
                                            } else {
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n kh√¥ng ƒë·ªß v√†ng ƒë·ªÉ m·ªü, c√≤n thi·∫øu "
                                                        + Util.numberToMoney((OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER - player.inventory.gold)) + " v√†ng");
                                            }
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.OPEN_POWER_PET) {
                                    if (select == 0) {
                                        if (player.inventory.gold >= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER) {
                                            if (OpenPowerService.gI().openPowerSpeed(player.pet)) {
                                                player.inventory.gold -= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER;
                                                Service.getInstance().sendMoney(player);
                                            }
                                        } else {
                                            Service.getInstance().sendThongBao(player,
                                                    "B·∫°n kh√¥ng ƒë·ªß v√†ng ƒë·ªÉ m·ªü, c√≤n thi·∫øu "
                                                    + Util.numberToMoney((OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER - player.inventory.gold)) + " v√†ng");
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BUNMA_TL:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "C·∫≠u b√© mu·ªën mua g√¨ n√†o?", "C·ª≠a h√†ng", "ƒê√≥ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    if (select == 0) {
                                        ShopService.gI().openShopNormal(player, this, ConstNpc.SHOP_BUNMA_TL_0, 0, player.gender);
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.RONG_OMEGA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                BlackBallWar.gI().setTime();
                                if (this.mapId == 24 || this.mapId == 25 || this.mapId == 26) {
                                    try {
                                        long now = System.currentTimeMillis();
                                        if (now > BlackBallWar.TIME_OPEN && now < BlackBallWar.TIME_CLOSE) {
                                            this.createOtherMenu(player, ConstNpc.MENU_OPEN_BDW, "ƒê∆∞·ªùng ƒë·∫øn v·ªõi ng·ªçc r·ªìng sao ƒëen ƒë√£ m·ªü, "
                                                    + "ng∆∞∆°i c√≥ mu·ªën tham gia kh√¥ng?",
                                                    "H∆∞·ªõng d·∫´n\nth√™m", "Tham gia", "T·ª´ ch·ªëi");
                                        } else {
                                            String[] optionRewards = new String[7];
                                            int index = 0;
                                            for (int i = 0; i < 7; i++) {
                                                if (player.rewardBlackBall.timeOutOfDateReward[i] > System.currentTimeMillis()) {
                                                    optionRewards[index] = "Nh·∫≠n th∆∞·ªüng\n" + (i + 1) + " sao";
                                                    index++;
                                                }
                                            }
                                            if (index != 0) {
                                                String[] options = new String[index + 1];
                                                for (int i = 0; i < index; i++) {
                                                    options[i] = optionRewards[i];
                                                }
                                                options[options.length - 1] = "T·ª´ ch·ªëi";
                                                this.createOtherMenu(player, ConstNpc.MENU_REWARD_BDW, "Ng∆∞∆°i c√≥ m·ªôt v√†i ph·∫ßn th∆∞·ªüng ng·ªçc "
                                                        + "r·ªìng sao ƒëen ƒë√¢y!",
                                                        options);
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.MENU_NOT_OPEN_BDW,
                                                        "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i?", "H∆∞·ªõng d·∫´n", "T·ª´ ch·ªëi");
                                            }
                                        }
                                    } catch (Exception ex) {
                                        Logger.error("L·ªói m·ªü menu r·ªìng Omega");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.MENU_REWARD_BDW:
                                        player.rewardBlackBall.getRewardSelect((byte) select);
                                        break;
                                    case ConstNpc.MENU_OPEN_BDW:
                                        if (select == 0) {
                                            NpcService.gI().createTutorial(player, this.avartar, ConstNpc.HUONG_DAN_BLACK_BALL_WAR);
                                        } else if (select == 1) {
                                            player.iDMark.setTypeChangeMap(ConstMap.CHANGE_BLACK_BALL);
                                            ChangeMapService.gI().openChangeMapTab(player);
                                        }
                                        break;
                                    case ConstNpc.MENU_NOT_OPEN_BDW:
                                        if (select == 0) {
                                            NpcService.gI().createTutorial(player, this.avartar, ConstNpc.HUONG_DAN_BLACK_BALL_WAR);
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.RONG_1S:
                case ConstNpc.RONG_2S:
                case ConstNpc.RONG_3S:
                case ConstNpc.RONG_4S:
                case ConstNpc.RONG_5S:
                case ConstNpc.RONG_6S:
                case ConstNpc.RONG_7S:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (player.isHoldBlackBall) {
                                    this.createOtherMenu(player, ConstNpc.MENU_PHU_HP, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i?", "Ph√π h·ªô", "T·ª´ ch·ªëi");
                                } else {
                                    this.createOtherMenu(player, ConstNpc.MENU_OPTION_GO_HOME, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i?", "V·ªÅ nh√†", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.getIndexMenu() == ConstNpc.MENU_PHU_HP) {
                                    if (select == 0) {
                                        this.createOtherMenu(player, ConstNpc.MENU_OPTION_PHU_HP,
                                                "Ta s·∫Ω gi√∫p ng∆∞∆°i tƒÉng HP l√™n m·ª©c kinh ho√†ng, ng∆∞∆°i ch·ªçn ƒëi",
                                                "x3 HP\n" + Util.numberToMoney(BlackBallWar.COST_X3) + " v√†ng",
                                                "x5 HP\n" + Util.numberToMoney(BlackBallWar.COST_X5) + " v√†ng",
                                                "x7 HP\n" + Util.numberToMoney(BlackBallWar.COST_X7) + " v√†ng",
                                                "T·ª´ ch·ªëi"
                                        );
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_GO_HOME) {
                                    if (select == 0) {
                                        ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, -1, 250);
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_PHU_HP) {
                                    switch (select) {
                                        case 0:
                                            BlackBallWar.gI().xHPKI(player, BlackBallWar.X3);
                                            break;
                                        case 1:
                                            BlackBallWar.gI().xHPKI(player, BlackBallWar.X5);
                                            break;
                                        case 2:
                                            BlackBallWar.gI().xHPKI(player, BlackBallWar.X7);
                                            break;
                                        case 3:
                                            this.npcChat(player, "ƒê·ªÉ ta xem ng∆∞∆°i tr·ª• ƒë∆∞·ª£c bao l√¢u");
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.NPC_64:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i mu·ªën xem th√¥ng tin g√¨?",
                                        "Top\ns·ª©c m·∫°nh", "ƒê√≥ng");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    if (select == 0) {
                                        TopService.gI().showTopPower(player);
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.WHIS:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (this.mapId == 154) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "Th·ª≠ ƒë√°nh v·ªõi ta xem n√†o.\nNg∆∞∆°i c√≤n 1 l∆∞·ª£t c∆° m√†.!",
                                        "Ch·∫ø T·∫°o", "H·ªçc \nTuy·ªát k·ªπ", "H∆∞·ªõng d·∫´n");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu() && this.mapId == 154) {
                                    switch (select) {
                                        case 0:
                                            this.createOtherMenu(player, 5,
                                                    "Ta s·∫Ω gi√∫p ng∆∞∆°i ch·∫ø t·∫°o trang b·ªã thi√™n s·ª©", "Ch·∫ø t·∫°o", "ƒê√≥ng");
                                            break;
                                        case 1:
                                            Item BiKiepTuyetKy = InventoryService.gI()
                                                    .findItem(player.inventory.itemsBag, 1125);
                                            if (BiKiepTuyetKy != null) {
                                                this.createOtherMenu(player, 6,
                                                        "Ta s·∫Ω gi√∫p ng∆∞∆°i h·ªçc tuy·ªát k·ªπ: %skill \nB√≠ ki·∫øp tuy·ªát k·ªπ: "
                                                        + BiKiepTuyetKy.quantity
                                                        + "/999\nGi√° v√†ng: 1.500.000.000\nGi√° ng·ªçc: 99999",
                                                        "ƒê·ªìng √Ω\nH·ªçc", "T·ª´ ch·ªëi");
                                            }
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == 5) {
                                    switch (select) {
                                        case 0:
                                            CombineServiceNew.gI().openTabCombine(player,
                                                    CombineServiceNew.DAP_DO_THIEN_SU);
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_DAP_DO) {
                                    if (select == 0) {
                                        CombineServiceNew.gI().startCombine(player);
                                    } else if (player.iDMark.getIndexMenu() == 6) {
                                        switch (select) {
                                            case 0:
                                                Item BiKiepTuyetKy = InventoryService.gI()
                                                        .findItem(player.inventory.itemsBag, 1125);
                                                if (BiKiepTuyetKy.quantity >= 9999) {
                                                    switch (player.gender) {
                                                        //
                                                        // SkillService.gI().learSkillSpecial(player, Skill.SUPER_KAME);
                                                        // SkillService.gI().learSkillSpecial(player,
                                                        // Skill.MA_PHONG_BA);
                                                        // SkillService.gI().learSkillSpecial(player,
                                                        // Skill.LIEN_HOAN_CHUONG);
                                                        // InventoryService.gI().subQuantityItem(player.inventory.itemsBag,
                                                        // BiKipTuyetKi, 999);
                                                        // InventoryServiceNew.gI().sendItemBags(player);
                                                        // }
                                                        // Service.gI().sendThongBao(player, "Ch∆∞a c√≥ ƒë·ªß b√≠ k√≠p tuy·ªát
                                                        // kƒ©");
                                                        // return;
                                                        case 0:
                                                            Service.gI().sendThongBao(player, "Tr√°i ƒë·∫•t l√®");
                                                            break;
                                                        case 1:
                                                            Service.gI().sendThongBao(player, "Namek l√®");
                                                            break;
                                                        case 2:
                                                            Service.gI().sendThongBao(player, "Xaday l√®");
                                                            break;

                                                    }
                                                } else {
                                                    Service.gI().sendThongBao(player,
                                                            "Con kh√¥ng ƒë·ªß b√≠ k√≠p tuy·ªát k·ªπ , h√£y luy·ªán t·∫≠p ƒë·ªÉ m·∫°nh h∆°n");
                                                    break;
                                                }
                                                break;

                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BILL:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 48) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i mu·ªën g√¨ n√†o?", "ƒê·ªïi ƒë·ªì\nh·ªßy di·ªát", "ƒê√≥ng");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (this.mapId) {
                                    case 48:
                                        switch (player.iDMark.getIndexMenu()) {
                                            case ConstNpc.BASE_MENU:
                                                if (select == 0) {
                                                    if (player.setClothes.godClothes || true) {
                                                        ShopService.gI().openShopBillHuyDiet(player,
                                                                ConstNpc.SHOP_BILL_HUY_DIET_0, 0);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Y√™u c·∫ßu c√≥ ƒë·ªß trang b·ªã th·∫ßn linh");
                                                    }
                                                }
                                                break;
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BO_MONG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 47) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Xin ch√†o, c·∫≠u mu·ªën t√¥i gi√∫p g√¨?", "Nhi·ªám v·ª•\nh√†ng ng√†y", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 47) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                if (player.playerTask.sideTask.template != null) {
                                                    String npcSay = "Nhi·ªám v·ª• hi·ªán t·∫°i: " + player.playerTask.sideTask.getName() + " ("
                                                            + player.playerTask.sideTask.getLevel() + ")"
                                                            + "\nHi·ªán t·∫°i ƒë√£ ho√†n th√†nh: " + player.playerTask.sideTask.count + "/"
                                                            + player.playerTask.sideTask.maxCount + " ("
                                                            + player.playerTask.sideTask.getPercentProcess() + "%)\nS·ªë nhi·ªám v·ª• c√≤n l·∫°i trong ng√†y: "
                                                            + player.playerTask.sideTask.leftTask + "/" + ConstTask.MAX_SIDE_TASK;
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPTION_PAY_SIDE_TASK,
                                                            npcSay, "Tr·∫£ nhi·ªám\nv·ª•", "H·ªßy nhi·ªám\nv·ª•");
                                                } else {
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPTION_LEVEL_SIDE_TASK,
                                                            "T√¥i c√≥ v√†i nhi·ªám v·ª• theo c·∫•p b·∫≠c, "
                                                            + "s·ª©c c·∫≠u c√≥ th·ªÉ l√†m ƒë∆∞·ª£c c√°i n√†o?",
                                                            "D·ªÖ", "B√¨nh th∆∞·ªùng", "Kh√≥", "Si√™u kh√≥", "T·ª´ ch·ªëi");
                                                }
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_LEVEL_SIDE_TASK) {
                                        switch (select) {
                                            case 0:
                                            case 1:
                                            case 2:
                                            case 3:
                                                TaskService.gI().changeSideTask(player, (byte) select);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_PAY_SIDE_TASK) {
                                        switch (select) {
                                            case 0:
                                                TaskService.gI().paySideTask(player);
                                                break;
                                            case 1:
                                                TaskService.gI().removeSideTask(player);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.GOKU_SSJ:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 80) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Xin ch√†o, t√¥i c√≥ th·ªÉ gi√∫p g√¨ cho c·∫≠u?",
                                            "T·ªõi h√†nh tinh\nYardart", "T·ª´ ch·ªëi");
                                } else if (this.mapId == 131) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Xin ch√†o, t√¥i c√≥ th·ªÉ gi√∫p g√¨ cho c·∫≠u?",
                                            "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        if (this.mapId == 80) {
//                                            if (select == 0) {
//                                                if (TaskService.gI().getIdTask(player) >= ConstTask.TASK_24_0) {
//                                                    ChangeMapService.gI().changeMapBySpaceShip(player, 160, -1, 168);
//                                                } else {
//                                                    this.npcChat(player, "Xin l·ªói, t√¥i ch∆∞a th·ªÉ ƒë∆∞a c·∫≠u t·ªõi n∆°i ƒë√≥ l√∫c n√†y...");
//                                                }
//                                            } else 
                                            if (select == 0) {
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 131, -1, 940);
                                            }
                                        } else if (this.mapId == 131) {
                                            if (select == 0) {
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 80, -1, 870);
                                            }
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.GOKU_SSJ_:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 133) {
                                    Item biKiep = InventoryService.gI().findItem(player.inventory.itemsBag, 590);
                                    int soLuong = 0;
                                    if (biKiep != null) {
                                        soLuong = biKiep.quantity;
                                    }
                                    if (soLuong >= 10000) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "B·∫°n ƒëang c√≥ " + soLuong + " b√≠ ki·∫øp.\n"
                                                + "H√£y ki·∫øm ƒë·ªß 10000 b√≠ ki·∫øp t√¥i s·∫Ω d·∫°y b·∫°n c√°ch d·ªãch chuy·ªÉn t·ª©c th·ªùi c·ªßa ng∆∞·ªùi Yardart", "H·ªçc d·ªãch\nchuy·ªÉn", "ƒê√≥ng");
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "B·∫°n ƒëang c√≥ " + soLuong + " b√≠ ki·∫øp.\n"
                                                + "H√£y ki·∫øm ƒë·ªß 10000 b√≠ ki·∫øp t√¥i s·∫Ω d·∫°y b·∫°n c√°ch d·ªãch chuy·ªÉn t·ª©c th·ªùi c·ªßa ng∆∞·ªùi Yardart", "ƒê√≥ng");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 133) {
                                    Item biKiep = InventoryService.gI().findItem(player.inventory.itemsBag, 590);
                                    int soLuong = 0;
                                    if (biKiep != null) {
                                        soLuong = biKiep.quantity;
                                    }
                                    if (soLuong >= 10000 && InventoryService.gI().getCountEmptyBag(player) > 0) {
                                        Item yardart = ItemService.gI().createNewItem((short) (player.gender + 592));
                                        yardart.itemOptions.add(new Item.ItemOption(47, 400));
                                        yardart.itemOptions.add(new Item.ItemOption(108, 10));
                                        InventoryService.gI().addItemBag(player, yardart, false);
                                        InventoryService.gI().subQuantityItemsBag(player, biKiep, 10000);
                                        InventoryService.gI().sendItemBags(player);
                                        Service.getInstance().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c trang ph·ª•c t·ªôc Yardart");
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.GHI_DANH:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player pl) {

                            if (mapId == 52) {
                                createOtherMenu(pl, 0, "Chi·∫øn ƒë·∫øn gi·ªçt m√°u cu·ªëi c√πng", "OK",
                                        "ƒê·∫°i H·ªôi\nV√µ Thu·∫≠t\nL·∫ßn th·ª©\n23");
                            } else if (mapId == 129) {
                                String[] menus;
                                if (pl.DaiHoiVoThuat.step == 11) {
                                    menus = new String[]{
                                        "H∆∞·ªõng\nd·∫´n\nth√™m",
                                        "Nh·∫≠n\nth∆∞·ªüng\nR∆∞∆°ng c·∫•p " + pl.DaiHoiVoThuat.step,
                                        "V·ªÅ\nƒê·∫°i H·ªôi\nV√µ Thu·∫≠t"
                                    };
                                } else if (pl.DaiHoiVoThuat.step < 11
                                        && pl.DaiHoiVoThuat.step > 0
                                        && !pl.DaiHoiVoThuat.isDrop) {
                                    menus = new String[]{
                                        "H∆∞·ªõng\nd·∫´n\nth√™m",
                                        pl.DaiHoiVoThuat.isStart ? "H·ªßy\nƒëƒÉng k√Ω"
                                        : "Thi ƒë·∫•u\n"
                                        + Util.powerToString(pl.DaiHoiVoThuat.die * 50000)
                                        + "\nv√†ng",
                                        "Nh·∫≠n\nth∆∞·ªüng\nR∆∞∆°ng c·∫•p " + pl.DaiHoiVoThuat.step,
                                        "V·ªÅ\nƒê·∫°i H·ªôi\nV√µ Thu·∫≠t"
                                    };
                                } else if (pl.DaiHoiVoThuat.step < 11
                                        && pl.DaiHoiVoThuat.step >= 0
                                        && !pl.DaiHoiVoThuat.isDrop) {
                                    menus = new String[]{
                                        "H∆∞·ªõng\nd·∫´n\nth√™m",
                                        pl.DaiHoiVoThuat.isStart ? "H·ªßy\nƒëƒÉng k√Ω"
                                        : "Thi ƒë·∫•u\n"
                                        + Util.powerToString(pl.DaiHoiVoThuat.die * 50000)
                                        + "\nv√†ng",
                                        "V·ªÅ\nƒê·∫°i H·ªôi\nV√µ Thu·∫≠t"
                                    };
                                } else {
                                    menus = new String[]{"H∆∞·ªõng\nd·∫´n\nth√™m", "V·ªÅ\nƒê·∫°i H·ªôi\nV√µ Thu·∫≠t"};
                                }
                                createOtherMenu(pl, 0, ""
                                        + "ƒê·∫°i h·ªôi v√µ thu·∫≠t l·∫ßn th·ª© 23\n"
                                        + "Di·ªÖn ra b·∫•t k·ªÉ ng√†y ƒë√™m, ng√†y ngh·ªâ, ng√†y l·ªÖ\n"
                                        + "Ph·∫ßn th∆∞·ªüng v√¥ c√πng qu√Ω gi√°\n"
                                        + "Nhanh ch√≥ng tham gia n√†o", menus);
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (mapId == 52) {
                                switch (select) {
                                    case 1:
                                        ChangeMapService.gI().changeMap(player, 129, -1, 300, 360);
                                        break;
                                }
                            } else if (mapId == 129) {
                                switch (select) {
                                    // H∆∞·ªõng d·∫´n
                                    case 0:
                                        Service.getInstance().sendThongBao(player,
                                                "Chi·∫øn th·∫Øng cu·ªëi c√πng v√† nh·∫≠n r∆∞∆°ng g√µ\nch·ª©a nhi·ªÅu ph·∫ßn qu√† h·∫•p h·∫´n");
                                        break;
                                    case 1:
                                        // ch∆∞a m·ªü r∆∞∆°ng
                                        if (player.DaiHoiVoThuat.isDrop) {
                                            ChangeMapService.gI().changeMap(player, 52, -1, 300, 336);
                                            break;
                                        }
                                        // ƒê√£ ƒëƒÉng k√Ω th√¨ h·ªßy ƒëƒÉng k√Ω
                                        if (player.DaiHoiVoThuat.isStart) {
                                            player.DaiHoiVoThuat.close();
                                            break;
                                        }
                                        if (player.DaiHoiVoThuat.step == 11) {
                                            Item ruonggo = ItemService.gI().createNewItem((short) 570);
                                            ruonggo.itemOptions
                                                    .add(new Item.ItemOption(72, player.DaiHoiVoThuat.step));
                                            ruonggo.itemOptions
                                                    .add(new Item.ItemOption(73,
                                                            (int) (System.currentTimeMillis() + 86400000)));
                                            InventoryService.gI().addItemBag(player, ruonggo, false);
                                            InventoryService.gI().sendItemBags(player);
                                            Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ nh·∫≠n ƒë∆∞·ª£c r∆∞∆°ng g·ªó c·∫•p "
                                                    + player.DaiHoiVoThuat.step + ".");
                                            player.DaiHoiVoThuat.isDrop = true;
                                            break;
                                        }

                                        // Thi ƒë·∫•u
                                        int Gold = player.DaiHoiVoThuat.die * 50000;
                                        if (player.inventory.gold >= Gold) {
                                            player.inventory.gold -= Gold;
                                            Service.getInstance().sendMoney(player);
                                            if (player.DaiHoiVoThuat.next == 0) {
                                                player.DaiHoiVoThuat.Start();
                                            }
                                        } else {
                                            Service.getInstance().sendThongBao(player,
                                                    "B·∫°n c√≤n thi·∫øu " + (Gold - player.inventory.gold)
                                                    + "v√†ng ƒë·ªÉ thi ƒë·∫•u.");
                                        }
                                        break;
                                    case 2:
                                        // Nh·∫≠n r∆∞∆°ng < 11z
                                        if (player.DaiHoiVoThuat.step == 11
                                                || player.DaiHoiVoThuat.step == 0
                                                || player.DaiHoiVoThuat.isDrop) {
                                            ChangeMapService.gI().changeMap(player, 52, -1, 300, 336);
                                        } else {
                                            Item ruonggo = ItemService.gI().createNewItem((short) 570);
                                            ruonggo.itemOptions
                                                    .add(new Item.ItemOption(72, player.DaiHoiVoThuat.step));
                                            ruonggo.itemOptions
                                                    .add(new Item.ItemOption(73,
                                                            (int) (System.currentTimeMillis() + 86400000)));
                                            InventoryService.gI().addItemBag(player, ruonggo, false);
                                            InventoryService.gI().sendItemBags(player);
                                            Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ nh·∫≠n ƒë∆∞·ª£c r∆∞∆°ng g·ªó c·∫•p "
                                                    + player.DaiHoiVoThuat.step + ".");
                                            player.DaiHoiVoThuat.isDrop = true;
                                        }
                                        break;
                                    case 3:
                                        ChangeMapService.gI().changeMap(player, 52, -1, 300, 336);
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.DUONG_TANG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 0) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ai mi ph√≤ ph√≤,th√≠ ch·ªß hay gi√∫p ta gi·∫£i c·ª©u ƒë·ªì ƒë·ªá c·ªßa b·∫ßn tƒÉng ƒëang b·ªã phong ·∫•n t·∫°i ng≈© h√†nh s∆°n ?",
                                            "ƒê·ªìng √ù", "T·ª´ ch·ªëi", "Nh·∫≠n th∆∞·ªüng");
                                } else if (this.mapId == 123) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "V·ªÅ L√†ng Aru", "T·ª´ ch·ªëi");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 0) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 123, -1, 35, 384);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 123) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 0, -1, 584, 432);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.LY_TIEU_NUONG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "C·∫≠u b√© mu·ªën mua g√¨ n√†o?",
                                            "C·ª≠a h√†ng", "ƒê√≥ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    if (select == 0) {
                                        ShopService.gI().openShopThoiVang(player,
                                                ConstNpc.SHOP_THOI_VANG, 0);
                                    }
                                }
                            }
                        }
                    };
                    break;
                default:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                super.openBaseMenu(player);
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
//                                ShopService.gI().openShopNormal(player, this, ConstNpc.SHOP_BUNMA_TL_0, 0, player.gender);
                            }
                        }
                    };
            }
        } catch (Exception e) {
            Logger.logException(NpcFactory.class, e, "L·ªói load npc");
        }
        return npc;
    }

    //girlkun75-mark
    public static void createNpcRongThieng() {
        Npc npc = new Npc(-1, -1, -1, -1, ConstNpc.RONG_THIENG, -1) {
            @Override
            public void confirmMenu(Player player, int select) {
                switch (player.iDMark.getIndexMenu()) {
                    case ConstNpc.IGNORE_MENU:

                        break;
                    case ConstNpc.SHENRON_CONFIRM:
                        if (select == 0) {
                            SummonDragon.gI().confirmWish();
                        } else if (select == 1) {
                            SummonDragon.gI().reOpenShenronWishes(player);
                        }
                        break;
                    case ConstNpc.SHENRON_1_1:
                        if (player.iDMark.getIndexMenu() == ConstNpc.SHENRON_1_1 && select == SHENRON_1_STAR_WISHES_1.length - 1) {
                            NpcService.gI().createMenuRongThieng(player, ConstNpc.SHENRON_1_2, SHENRON_SAY, SHENRON_1_STAR_WISHES_2);
                            break;
                        }
                    case ConstNpc.SHENRON_1_2:
                        if (player.iDMark.getIndexMenu() == ConstNpc.SHENRON_1_2 && select == SHENRON_1_STAR_WISHES_2.length - 1) {
                            NpcService.gI().createMenuRongThieng(player, ConstNpc.SHENRON_1_1, SHENRON_SAY, SHENRON_1_STAR_WISHES_1);
                            break;
                        }
                    default:
                        SummonDragon.gI().showConfirmShenron(player, player.iDMark.getIndexMenu(), (byte) select);
                        break;
                }
            }
        };
    }

    public static void createNpcConMeo() {
        Npc npc = new Npc(-1, -1, -1, -1, ConstNpc.CON_MEO, 351) {
            @Override
            public void confirmMenu(Player player, int select) {
                switch (player.iDMark.getIndexMenu()) {
                    case ConstNpc.IGNORE_MENU:

                        break;
                    case ConstNpc.MAKE_MATCH_PVP:
//                        PVP_old.gI().sendInvitePVP(player, (byte) select);
                        PVPServcice.gI().sendInvitePVP(player, (byte) select);
                        break;
                    case ConstNpc.MAKE_FRIEND:
                        if (select == 0) {
                            Object playerId = PLAYERID_OBJECT.get(player.id);
                            if (playerId != null) {
                                FriendAndEnemyService.gI().acceptMakeFriend(player,
                                        Integer.parseInt(String.valueOf(playerId)));
                            }
                        }
                        break;
                    case ConstNpc.REVENGE:
                        if (select == 0) {
                            PVPServcice.gI().acceptRevenge(player);
                        }
                        break;
                    case ConstNpc.TUTORIAL_SUMMON_DRAGON:
                        if (select == 0) {
                            NpcService.gI().createTutorial(player, -1, SummonDragon.SUMMON_SHENRON_TUTORIAL);
                        }
                        break;
                    case ConstNpc.SUMMON_SHENRON:
                        if (select == 0) {
                            NpcService.gI().createTutorial(player, -1, SummonDragon.SUMMON_SHENRON_TUTORIAL);
                        } else if (select == 1) {
                            SummonDragon.gI().summonShenron(player);
                        }
                        break;

                    case ConstNpc.INTRINSIC:
                        if (select == 0) {
                            IntrinsicService.gI().showAllIntrinsic(player);
                        } else if (select == 1) {
                            IntrinsicService.gI().showConfirmOpen(player);
                        } else if (select == 2) {
                            IntrinsicService.gI().showConfirmOpenVip(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_OPEN_INTRINSIC:
                        if (select == 0) {
                            IntrinsicService.gI().open(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_OPEN_INTRINSIC_VIP:
                        if (select == 0) {
                            IntrinsicService.gI().openVip(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_LEAVE_CLAN:
                        if (select == 0) {
                            ClanService.gI().leaveClan(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_NHUONG_PC:
                        if (select == 0) {
                            ClanService.gI().phongPc(player, (int) PLAYERID_OBJECT.get(player.id));
                        }
                        break;
                    case ConstNpc.BAN_PLAYER:
                        if (select == 0) {
                            PlayerService.gI().banPlayer((Player) PLAYERID_OBJECT.get(player.id));
                            Service.getInstance().sendThongBao(player, "Ban ng∆∞·ªùi ch∆°i " + ((Player) PLAYERID_OBJECT.get(player.id)).name + " th√†nh c√¥ng");
                        }
                        break;
                    case ConstNpc.BUFF_PET:
                        if (select == 0) {
                            Player pl = (Player) PLAYERID_OBJECT.get(player.id);
                            if (pl.pet == null) {
                                PetService.gI().createNormalPet(pl);
                                Service.getInstance().sendThongBao(player, "Ph√°t ƒë·ªá t·ª≠ cho " + ((Player) PLAYERID_OBJECT.get(player.id)).name + " th√†nh c√¥ng");
                            }
                        }
                        break;
                    case ConstNpc.MENU_ADMIN:
                        switch (select) {
                            case 0:
                                for (int i = 14; i <= 20; i++) {
                                    Item item = ItemService.gI().createNewItem((short) i);
                                    InventoryService.gI().addItemBag(player, item, false);
                                }
                                InventoryService.gI().sendItemBags(player);
                                break;
                            case 1:
                                if (player.pet == null) {
                                    PetService.gI().createNormalPet(player);
                                } else {
                                    if (player.pet.isMabu) {
                                        PetService.gI().changeNormalPet(player);
                                    } else {
                                        PetService.gI().changeMabuPet(player);
                                    }
                                }
                                break;
                            case 2:
//                                PlayerService.gI().baoTri();
                                Maintenance.gI().start(60);
                                break;
                            case 3:
                                Input.gI().createFormFindPlayer(player);
                                break;
                        }
                        break;
                    case ConstNpc.CONFIRM_REMOVE_ALL_ITEM_LUCKY_ROUND:
                        if (select == 0) {
                            for (int i = 0; i < player.inventory.itemsBoxCrackBall.size(); i++) {
                                player.inventory.itemsBoxCrackBall.set(i, ItemService.gI().createItemNull());
                            }
                            Service.getInstance().sendThongBao(player, "ƒê√£ x√≥a h·∫øt v·∫≠t ph·∫©m trong r∆∞∆°ng");
                        }
                        break;
                    case ConstNpc.MENU_FIND_PLAYER:
                        Player p = (Player) PLAYERID_OBJECT.get(player.id);
                        if (p != null) {
                            switch (select) {
                                case 0:
                                    if (p.zone != null) {
                                        ChangeMapService.gI().changeMapYardrat(player, p.zone, p.location.x, p.location.y);
                                    }
                                    break;
                                case 1:
                                    if (p.zone != null) {
                                        ChangeMapService.gI().changeMap(p, player.zone, player.location.x, player.location.y);
                                    }
                                    break;
                                case 2:
                                    if (p != null) {
                                        Input.gI().createFormChangeName(player, p);
                                    }
                                    break;
                                case 3:
                                    if (p != null) {
                                        String[] selects = new String[]{"ƒê·ªìng √Ω", "H·ªßy"};
                                        NpcService.gI().createMenuConMeo(player, ConstNpc.BAN_PLAYER, -1,
                                                "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ban " + p.name, selects, p);
                                    }
                                    break;
                            }
                        }
                        break;
                }
            }
        };
    }

}
